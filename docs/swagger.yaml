definitions:
  http.MiniLoginRequest:
    properties:
      app:
        type: string
      encryptedData:
        type: string
      iv:
        type: string
      jsCode:
        type: string
      phoneNumberCode:
        type: string
      register:
        type: boolean
    type: object
  model.CheckRegisterWithWechatResp:
    properties:
      code:
        type: integer
      current:
        type: integer
      data:
        type: boolean
      desc:
        type: boolean
      message:
        type: string
      orderField:
        type: string
      pageIndex:
        type: integer
      pageSize:
        type: integer
      pages:
        type: integer
      records:
        type: integer
      total:
        type: integer
    type: object
  usercenter.APIInfo:
    properties:
      checkAuth:
        description: 是否检查权限
        type: boolean
      checkLogin:
        description: 是否需要登录
        type: boolean
      description:
        description: 描述
        type: string
      enable:
        description: 是否启用
        type: boolean
      group:
        description: 分组
        type: string
      id:
        description: UUID
        type: string
      method:
        description: |-
          方法 GET POST PUT 等等
          @inject_tag: validate:"required"
        type: string
      path:
        description: |-
          路径
          @inject_tag: validate:"required"
        type: string
    required:
    - method
    - path
    type: object
  usercenter.ChangePwdRequest:
    properties:
      id:
        description: '@inject_tag: validate:"required"'
        type: string
      newConfirmPwd:
        description: '@inject_tag: validate:"required"'
        type: string
      newPwd:
        description: '@inject_tag: validate:"required"'
        type: string
      oldPwd:
        description: '@inject_tag: validate:"required"'
        type: string
      tenantID:
        type: string
    required:
    - id
    - newConfirmPwd
    - newPwd
    - oldPwd
    type: object
  usercenter.CommonResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  usercenter.DelRequest:
    properties:
      id:
        description: '@inject_tag: validate:"required"'
        type: string
      tenantID:
        type: string
    required:
    - id
    type: object
  usercenter.EnableRequest:
    properties:
      enable:
        type: boolean
      id:
        description: '@inject_tag: validate:"required"'
        type: string
      tenantID:
        type: string
    required:
    - id
    type: object
  usercenter.GetAPIDetailResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/usercenter.APIInfo'
      message:
        type: string
    type: object
  usercenter.GetAllAPIResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/usercenter.APIInfo'
        type: array
      message:
        type: string
    type: object
  usercenter.GetAllUsersResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/usercenter.UserInfo'
        type: array
      message:
        type: string
    type: object
  usercenter.GetDetailRequest:
    properties:
      id:
        description: '@inject_tag: uri:"id" form:"id" validate:"required"'
        type: string
      tenantID:
        description: '@inject_tag: uri:"tenantID" form:"tenantID"'
        type: string
    required:
    - id
    type: object
  usercenter.GetMenuDetailResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/usercenter.MenuInfo'
      message:
        type: string
    type: object
  usercenter.GetRoleDetailResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/usercenter.RoleInfo'
      message:
        type: string
    type: object
  usercenter.GetTenantDetailResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/usercenter.TenantInfo'
      message:
        type: string
    type: object
  usercenter.GetUserDetailResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/usercenter.UserInfo'
      message:
        type: string
    type: object
  usercenter.LoginRequest:
    properties:
      password:
        description: 密码
        type: string
      userName:
        description: 用户名
        type: string
      wechatOpenID:
        description: 微信OpenID
        type: string
      wechatUnionID:
        description: 微信Union ID
        type: string
    type: object
  usercenter.LoginResponse:
    properties:
      code:
        type: integer
      data:
        type: string
      message:
        type: string
    type: object
  usercenter.MenuFunc:
    properties:
      hidden:
        type: boolean
      id:
        type: string
      menuFuncApis:
        items:
          $ref: '#/definitions/usercenter.MenuFuncApi'
        type: array
      menuID:
        type: string
      name:
        type: string
      title:
        type: string
    type: object
  usercenter.MenuFuncApi:
    properties:
      apiID:
        type: string
      apiInfo:
        $ref: '#/definitions/usercenter.APIInfo'
      id:
        type: string
      menuFuncID:
        type: string
    type: object
  usercenter.MenuInfo:
    properties:
      cache:
        type: boolean
      children:
        items:
          $ref: '#/definitions/usercenter.MenuInfo'
        type: array
      closeTab:
        type: boolean
      component:
        type: string
      defaultMenu:
        type: boolean
      hidden:
        type: boolean
      icon:
        type: string
      id:
        type: string
      level:
        type: integer
      menuFuncs:
        items:
          $ref: '#/definitions/usercenter.MenuFunc'
        type: array
      name:
        description: '@inject_tag: validate:"required"'
        type: string
      parameters:
        items:
          $ref: '#/definitions/usercenter.MenuParameter'
        type: array
      parentID:
        type: string
      path:
        type: string
      sort:
        type: integer
      title:
        type: string
    required:
    - name
    type: object
  usercenter.MenuParameter:
    properties:
      id:
        type: string
      key:
        type: string
      menuID:
        type: string
      type:
        type: string
      value:
        type: string
    type: object
  usercenter.QueryAPIResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/usercenter.APIInfo'
        type: array
      message:
        type: string
      pages:
        type: integer
      records:
        type: integer
      total:
        type: integer
    type: object
  usercenter.QueryMenuResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/usercenter.MenuInfo'
        type: array
      message:
        type: string
      pages:
        type: integer
      records:
        type: integer
      total:
        type: integer
    type: object
  usercenter.QueryRoleResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/usercenter.RoleInfo'
        type: array
      message:
        type: string
      pages:
        type: integer
      records:
        type: integer
      total:
        type: integer
    type: object
  usercenter.QueryTenantResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/usercenter.TenantInfo'
        type: array
      message:
        type: string
      pages:
        type: integer
      records:
        type: integer
      total:
        type: integer
    type: object
  usercenter.QueryUserResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/usercenter.UserInfo'
        type: array
      message:
        type: string
      pages:
        type: integer
      records:
        type: integer
      total:
        type: integer
    type: object
  usercenter.RoleInfo:
    properties:
      canDel:
        type: boolean
      children:
        items:
          $ref: '#/definitions/usercenter.RoleInfo'
        type: array
      defaultRouter:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        description: '@inject_tag: validate:"required"'
        type: string
      parentID:
        type: string
      roleMenus:
        items:
          $ref: '#/definitions/usercenter.RoleMenu'
        type: array
      tenantID:
        type: string
      tenantName:
        type: string
    required:
    - name
    type: object
  usercenter.RoleMenu:
    properties:
      funcs:
        type: string
      id:
        type: string
      menu:
        $ref: '#/definitions/usercenter.MenuInfo'
      menuID:
        type: string
      roleID:
        type: string
    type: object
  usercenter.TenantInfo:
    properties:
      address:
        type: string
      area:
        description: 区/县
        type: string
      areaCovered:
        type: string
      businessScope:
        type: string
      cellPhone:
        type: string
      city:
        description: 城市
        type: string
      contact:
        type: string
      enable:
        type: boolean
      id:
        type: string
      name:
        description: '@inject_tag: validate:"required"'
        type: string
      province:
        description: 省份
        type: string
      staffSize:
        type: integer
      town:
        description: 街道/镇
        type: string
    required:
    - name
    type: object
  usercenter.UserInfo:
    properties:
      avatar:
        type: string
      city:
        type: string
      country:
        type: string
      createdAt:
        description: 注册时间
        type: string
      description:
        type: string
      eid:
        type: string
      email:
        type: string
      enable:
        type: boolean
      gender:
        type: boolean
      group:
        description: 分组，例如属于某个组织的，或者某个个人
        type: string
      id:
        type: string
      idCard:
        type: string
      mobile:
        description: '@inject_tag: validate:"required"'
        type: string
      nickname:
        description: '@inject_tag: validate:"required"'
        type: string
      password:
        type: string
      province:
        type: string
      realName:
        type: string
      roleIDs:
        items:
          type: string
        type: array
      tenantID:
        type: string
      tenantName:
        type: string
      title:
        type: string
      type:
        type: integer
      userName:
        description: '@inject_tag: validate:"required"'
        type: string
      userRoles:
        items:
          $ref: '#/definitions/usercenter.UserRole'
        type: array
      wechatOpenID:
        type: string
      wechatUnionID:
        type: string
    required:
    - mobile
    - nickname
    - userName
    type: object
  usercenter.UserProfile:
    properties:
      avatar:
        description: 头像
        type: string
      birthday:
        type: integer
      city:
        type: string
      country:
        type: string
      county:
        type: string
      description:
        type: string
      eid:
        type: string
      email:
        description: 邮箱
        type: string
      gender:
        description: 性别
        type: boolean
      group:
        type: string
      id:
        type: string
      idCard:
        description: 身份证号码
        type: string
      menus:
        items:
          $ref: '#/definitions/usercenter.MenuInfo'
        type: array
      mobile:
        description: |-
          手机号
          @inject_tag: validate:"required"
        type: string
      nickname:
        description: |-
          昵称
          @inject_tag: validate:"required"
        type: string
      province:
        type: string
      realName:
        description: 姓名
        type: string
      tenantID:
        type: string
      type:
        description: |-
          下面数据只有查询的时候用到，更新的时候不需要传
          用户类型
        type: integer
      userName:
        description: 只有调用UpdateProfileAndUserName接口时需要
        type: string
    required:
    - mobile
    - nickname
    type: object
  usercenter.UserRole:
    properties:
      id:
        type: string
      roleID:
        type: string
      userID:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/core/auth/api/add:
    post:
      consumes:
      - application/json
      description: 新增API
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: Add API
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.APIInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 新增API
      tags:
      - API管理
  /api/core/auth/api/all:
    get:
      consumes:
      - application/json
      description: 查询所有API
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.GetAllAPIResponse'
      summary: 查询所有API
      tags:
      - API管理
  /api/core/auth/api/delete:
    delete:
      consumes:
      - application/json
      description: 软删除API
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: Delete API
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.DelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 删除API
      tags:
      - API管理
  /api/core/auth/api/detail:
    get:
      consumes:
      - application/json
      description: 查询明细
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.GetAPIDetailResponse'
      summary: 查询明细
      tags:
      - API管理
  /api/core/auth/api/enable:
    post:
      consumes:
      - application/json
      description: 禁用/启用API
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: Enable/Disable API
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.EnableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 禁用/启用API
      tags:
      - API管理
  /api/core/auth/api/query:
    get:
      consumes:
      - application/json
      description: 分页查询
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 从1开始
        in: query
        name: pageIndex
        type: integer
      - description: 默认每页10条
        in: query
        name: pageSize
        type: integer
      - description: 排序字段
        in: query
        name: orderField
        type: string
      - description: 是否倒序排序
        in: query
        name: desc
        type: boolean
      - description: 路径
        in: query
        name: path
        type: string
      - description: 方法
        in: query
        name: method
        type: string
      - description: 分组
        in: query
        name: group
        type: string
      - description: 是否检查权限
        in: query
        name: checkAuth
        type: string
      - description: 是否需要登录
        in: query
        name: checkLogin
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.QueryAPIResponse'
      summary: 分页查询
      tags:
      - API管理
  /api/core/auth/api/update:
    put:
      consumes:
      - application/json
      description: 更新API
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: Update API
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.APIInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 更新API
      tags:
      - API管理
  /api/core/auth/menu/add:
    post:
      consumes:
      - application/json
      description: 新增菜单
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.MenuInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 新增菜单
      tags:
      - 菜单管理
  /api/core/auth/menu/all:
    get:
      consumes:
      - application/json
      description: 查询所有菜单（Tree）
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.QueryMenuResponse'
      summary: 查询所有菜单（Tree）
      tags:
      - 菜单管理
  /api/core/auth/menu/delete:
    delete:
      consumes:
      - application/json
      description: 软删除菜单
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.DelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 删除菜单
      tags:
      - 菜单管理
  /api/core/auth/menu/detail:
    get:
      consumes:
      - application/json
      description: 查询明细
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.GetMenuDetailResponse'
      summary: 查询明细
      tags:
      - 菜单管理
  /api/core/auth/menu/query:
    get:
      consumes:
      - application/json
      description: 分页查询
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 从1开始
        in: query
        name: pageIndex
        type: integer
      - description: 默认每页10条
        in: query
        name: pageSize
        type: integer
      - description: 排序字段
        in: query
        name: orderField
        type: string
      - description: 是否倒序排序
        in: query
        name: desc
        type: boolean
      - description: 路径
        in: query
        name: path
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      - description: 显示名称
        in: query
        name: title
        type: string
      - description: 父ID
        in: query
        name: parentID
        type: string
      - description: 层级
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.QueryMenuResponse'
      summary: 分页查询
      tags:
      - 菜单管理
  /api/core/auth/menu/update:
    put:
      consumes:
      - application/json
      description: 更新菜单
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.MenuInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 更新菜单
      tags:
      - 菜单管理
  /api/core/auth/role/add:
    post:
      consumes:
      - application/json
      description: 新增角色
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.RoleInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 新增角色
      tags:
      - 角色管理
  /api/core/auth/role/all:
    get:
      consumes:
      - application/json
      description: 查询所有角色
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 租户ID
        in: query
        name: tenantID
        type: string
      - description: 是否包含公共角色
        in: query
        name: containerComm
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.QueryRoleResponse'
      summary: 查询所有角色
      tags:
      - 角色管理
  /api/core/auth/role/delete:
    delete:
      consumes:
      - application/json
      description: 软删除角色
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.DelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 删除角色
      tags:
      - 角色管理
  /api/core/auth/role/detail:
    get:
      consumes:
      - application/json
      description: 查询明细
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.GetRoleDetailResponse'
      summary: 查询明细
      tags:
      - 角色管理
  /api/core/auth/role/query:
    get:
      consumes:
      - application/json
      description: 分页查询
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 从1开始
        in: query
        name: pageIndex
        type: integer
      - description: 默认每页10条
        in: query
        name: pageSize
        type: integer
      - description: 排序字段
        in: query
        name: orderField
        type: string
      - description: 是否倒序排序
        in: query
        name: desc
        type: boolean
      - description: 租户ID
        in: query
        name: tenantID
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.QueryRoleResponse'
      summary: 分页查询
      tags:
      - 角色管理
  /api/core/auth/role/update:
    put:
      consumes:
      - application/json
      description: 更新角色
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.RoleInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 更新角色
      tags:
      - 角色管理
  /api/core/auth/tenant/add:
    post:
      consumes:
      - application/json
      description: 新增租户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.TenantInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 新增租户
      tags:
      - 租户管理
  /api/core/auth/tenant/all:
    get:
      consumes:
      - application/json
      description: 查询所有租户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.QueryTenantResponse'
      summary: 查询所有租户
      tags:
      - 租户管理
  /api/core/auth/tenant/delete:
    delete:
      consumes:
      - application/json
      description: 软删除租户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.DelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 删除租户
      tags:
      - 租户管理
  /api/core/auth/tenant/detail:
    get:
      consumes:
      - application/json
      description: 查询明细
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: string
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.GetTenantDetailResponse'
      summary: 查询明细
      tags:
      - 租户管理
  /api/core/auth/tenant/enable:
    post:
      consumes:
      - application/json
      description: 禁用/启用租户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.EnableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 禁用/启用租户
      tags:
      - 租户管理
  /api/core/auth/tenant/query:
    get:
      consumes:
      - application/json
      description: 分页查询
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 从1开始
        in: query
        name: pageIndex
        type: integer
      - description: 默认每页10条
        in: query
        name: pageSize
        type: integer
      - description: 排序字段
        in: query
        name: orderField
        type: string
      - description: 是否倒序排序
        in: query
        name: desc
        type: boolean
      - description: 租户ID
        in: query
        name: tenantID
        type: string
      - description: 名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.QueryTenantResponse'
      summary: 分页查询
      tags:
      - 租户管理
  /api/core/auth/tenant/update:
    put:
      consumes:
      - application/json
      description: 更新租户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.TenantInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 更新租户
      tags:
      - 租户管理
  /api/core/auth/user/add:
    post:
      consumes:
      - application/json
      description: 新增用户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 新增用户
      tags:
      - 用户管理
  /api/core/auth/user/all:
    get:
      consumes:
      - application/json
      description: 查询所有用户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 用户类型,从1开始,为0时查询全部
        in: query
        name: type
        type: integer
      - description: 租户ID
        in: query
        name: tenantID
        type: string
      - description: 分组ID，例如属于某个组织的，或者某个个人
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.GetAllUsersResponse'
      summary: 查询所有用户
      tags:
      - 用户管理
  /api/core/auth/user/changepwd:
    post:
      consumes:
      - application/json
      description: 修改密码
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.ChangePwdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 修改密码
      tags:
      - 用户管理
  /api/core/auth/user/delete:
    delete:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.DelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 删除用户
      tags:
      - 用户管理
  /api/core/auth/user/detail:
    get:
      consumes:
      - application/json
      description: 查询明细
      parameters:
      - description: 用户ID
        in: query
        name: id
        required: true
        type: string
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.GetUserDetailResponse'
      summary: 查询明细
      tags:
      - 用户管理
  /api/core/auth/user/enable:
    post:
      consumes:
      - application/json
      description: 禁用/启用用户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.EnableRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 禁用/启用用户
      tags:
      - 用户管理
  /api/core/auth/user/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: Bearer+空格+Token
        in: header
        name: authorization
        required: true
        type: string
      - description: 个人信息
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/usercenter.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.LoginResponse'
      summary: 登录
      tags:
      - 用户管理
  /api/core/auth/user/logout:
    post:
      consumes:
      - application/json
      description: 退出登录
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 退出登录
      tags:
      - 用户管理
  /api/core/auth/user/profile:
    get:
      consumes:
      - application/json
      description: 获取个人信息
      parameters:
      - description: Bearer+空格+Token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.UserProfile'
      summary: 获取个人信息
      tags:
      - 用户管理
    put:
      consumes:
      - application/json
      description: 更新个人信息
      parameters:
      - description: Bearer+空格+Token
        in: header
        name: authorization
        required: true
        type: string
      - description: 个人信息
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/usercenter.UserProfile'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 更新个人信息
      tags:
      - 用户管理
  /api/core/auth/user/query:
    get:
      consumes:
      - application/json
      description: 分页查询
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 从1开始
        in: query
        name: pageIndex
        type: integer
      - description: 默认每页10条
        in: query
        name: pageSize
        type: integer
      - description: 排序字段
        in: query
        name: orderField
        type: string
      - description: 是否倒序排序
        in: query
        name: desc
        type: boolean
      - description: 用户名
        in: query
        name: userName
        type: string
      - description: 昵称
        in: query
        name: nickname
        type: string
      - description: 身份证号
        in: query
        name: idCard
        type: string
      - description: 手机号
        in: query
        name: mobile
        type: string
      - description: 职位
        in: query
        name: title
        type: string
      - description: 用户类型,从1开始,为0时查询全部
        in: query
        name: type
        type: integer
      - description: 租户ID
        in: query
        name: tenantID
        type: string
      - description: 分组ID，例如属于某个组织的，或者某个个人
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.QueryUserResponse'
      summary: 分页查询
      tags:
      - 用户管理
  /api/core/auth/user/resetpwd:
    post:
      consumes:
      - application/json
      description: 重置密码
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.GetDetailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 重置密码
      tags:
      - 用户管理
  /api/core/auth/user/update:
    put:
      consumes:
      - application/json
      description: 更新用户
      parameters:
      - description: jwt token
        in: header
        name: authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/usercenter.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.CommonResponse'
      summary: 更新用户
      tags:
      - 用户管理
  /api/phone/bind:
    post:
      consumes:
      - application/json
      description: 绑定手机号
      parameters:
      - description: Bearer+空格+Token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/http.MiniLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.LoginResponse'
      summary: 绑定手机号
      tags:
      - 微信
  /api/wechat/mini/login:
    post:
      consumes:
      - application/json
      description: 微信登录
      parameters:
      - description: Bearer+空格+Token
        in: header
        name: authorization
        required: true
        type: string
      - description: 登录参数
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/http.MiniLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usercenter.LoginResponse'
      summary: 微信登录
      tags:
      - 微信
  /api/wechat/mini/register/check:
    post:
      consumes:
      - application/json
      description: 检查是否注册过
      parameters:
      - description: Bearer+空格+Token
        in: header
        name: authorization
        required: true
        type: string
      - description: 请求参数
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/http.MiniLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CheckRegisterWithWechatResp'
      summary: 检查是否注册过
      tags:
      - 微信
swagger: "2.0"
